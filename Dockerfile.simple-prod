# Simple Production Dockerfile for PM-App
FROM node:20-alpine

# Install system dependencies
RUN apk update && apk add --no-cache \
    libc6-compat \
    cairo \
    jpeg \
    pango \
    giflib \
    librsvg \
    pixman \
    curl \
    dumb-init

# Create app user for security
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Copy Prisma schema first (needed for postinstall)
COPY prisma ./prisma/

# Install dependencies with legacy peer deps to avoid conflicts
RUN npm install --legacy-peer-deps --production=false

# Copy application code
COPY . .

# Build the application with increased memory
ENV NODE_OPTIONS="--max-old-space-size=6144"
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1
RUN npm run build

# Create necessary directories and set permissions
RUN mkdir -p data logs uploads .next/cache && \
    chown -R nextjs:nodejs /app

# Switch to non-root user
USER nextjs

# Set production environment
ENV NODE_ENV=production
ENV PORT=3000
ENV HOSTNAME=0.0.0.0

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:3000/api/health || exit 1

# Start the application
ENTRYPOINT ["dumb-init", "--"]
CMD ["npm", "start"]
